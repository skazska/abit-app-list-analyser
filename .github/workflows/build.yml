name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: abitur-analyzer
            asset_name: abitur-analyzer-linux-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: abitur-analyzer.exe
            asset_name: abitur-analyzer-windows-x64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: abitur-analyzer
            asset_name: abitur-analyzer-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: abitur-analyzer
            asset_name: abitur-analyzer-macos-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create artifact
      run: |
        mkdir -p artifacts
        cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} artifacts/${{ matrix.asset_name }}
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: artifacts/${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Abitur Analyzer Release
          
          This release includes pre-compiled binaries for:
          - Linux x64
          - Windows x64
          - macOS x64 (Intel)
          - macOS ARM64 (Apple Silicon)
          
          Download the appropriate binary for your platform and run it with:
          ```
          ./abitur-analyzer-[platform] --help
          ```
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for dir in artifacts/*/; do
          asset_name=$(basename "$dir")
          asset_path="$dir$asset_name"
          echo "Uploading $asset_path as $asset_name"
          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$asset_path" \
            "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
        done
